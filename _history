{"entries":[{"timestamp":1751054319141,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\"><statement name=\"HANDLER\"><block type=\"serial_writevalue\"><value name=\"name\"><shadow type=\"text\"><field name=\"TEXT\">x</field></shadow></value><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.Y</field></block></value></block></statement"],[0,"></b"]],"start1":107,"start2":107,"length1":356,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"// Initialize the array to hold the values\nlet a: number[]  = [];\n\n// Function to add a new value and calculate the running average\nfunction addAndAverage(x: number) {\n    // Add the new value to the end\n    a.push(x);\n\n    // If there are more than 10 items, remove the oldest one\n    if (a.length > 10) {\n        a.shift();\n    }\n\n    // Calculate the sum\n    let sum = 0;\n    for (let i = 0; i < a.length; i++) {\n        sum += a[i];\n    }\n\n    // Calculate the average\n    let average = sum / a.length;\n\n    // Return the average\n    return average;\n}\nbasic.forever(function () {\n\n    let m = addAndAverage(input.acceleration(Dimension.Y))\n\n    serial.writeValue(\"x\", m)\n})\n"]],"start1":0,"start2":0,"length1":679,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":32,"length2":31}]}]},{"timestamp":1751054684568,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"[];\n"],[-1,"led.plot(0, 0)"],[0,"\n// "]],"start1":63,"start2":63,"length1":22,"length2":8}]}]},{"timestamp":1751082577884,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  = [];\n"],[-1,"\n\n"],[0,"led.plot"]],"start1":59,"start2":59,"length1":18,"length2":16}]}]},{"timestamp":1751082580420,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"];\n\n"],[-1,"servos.P1.setAngle(90)\n\nlet run = false;\n\nfunction stepServo(servo: servos.PinServo, start: number, end: number,\n    step: number = 2, pause: number = 30) {\n\n    step = Math.abs(step)\n\n    if (start <= end) {\n        for (let i = start; i < end; i += step) {\n            servo.setAngle(i)\n            basic.pause(pause)\n        }\n    } else {\n        for (let i = start; i > end; i -= step) {\n            servo.setAngle(i)\n            basic.pause(pause)\n        }\n    }\n\n}\n\nbasic.forever(function () {\n    if (!run) {\n        return\n    }\n\n    stepServo(servos.P1, 90, 180);\n    stepServo(servos.P1, 180, 0);\n    stepServo(servos.P1, 0, 90);\n\n})\ninput.onButtonPressed(Button.A, function () {\n    run = !run\n})\n/**\n * Scales a value from the input range [1024, -1024] to the output range [180, 0].\n * @param input - The value to scale.\n * @returns The scaled value.\n */\nfunction scaleInput(input: number): number {\n    // Define the input range\n    const inputMin = 1024;\n    const inputMax = -1024;\n\n    // Define the output range\n    const outputMin = 180;\n    const outputMax = 0;\n\n    // Compute the scaled value\n    const scaled = ((input - inputMin) / (inputMax - inputMin)) * (outputMax - outputMin) + outputMin;\n\n    return scaled;\n}\n\n"],[1,"\nled.plot(0, 0)"],[0,"\n// "]],"start1":64,"start2":64,"length1":1250,"length2":23},{"diffs":[[0,"mber"],[-1,", l: number = 5"],[0,") {\n"]],"start1":177,"start2":177,"length1":23,"length2":8},{"diffs":[[0,"a.push(x);\n\n"],[1,"    // If there are more than 10 items, remove the oldest one\n"],[0,"    if (a.le"]],"start1":225,"start2":225,"length1":24,"length2":86},{"diffs":[[0,"ength > "],[-1,"l"],[1,"10"],[0,") {\n    "]],"start1":310,"start2":310,"length1":17,"length2":18},{"diffs":[[0,"))\n\n"],[-1,"    let v = scaleInput(m);\n\n"],[0,"    "]],"start1":658,"start2":658,"length1":36,"length2":8},{"diffs":[[0,"ue(\"x\", "],[-1,"v"],[1,"m"],[0,")\n})\n"]],"start1":681,"start2":681,"length1":14,"length2":14}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ne\":"],[-1," \"*\",\n        \"servo\":"],[0," \"*\""]],"start1":138,"start2":138,"length1":30,"length2":8}]}]},{"timestamp":1751083162963,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"unction "],[-1,"mkS"],[1,"s"],[0,"tepServo"]],"start1":111,"start2":111,"length1":19,"length2":17},{"diffs":[[0,"epServo("],[-1,"\n    "],[0,"servo: s"]],"start1":121,"start2":121,"length1":21,"length2":16},{"diffs":[[0,"rvo,"],[-1,"\n    step: number,\n    pause: number,\n    callback?: (angle"],[1," start: number, end: number,\n    step"],[0,": number"],[-1,")"],[0," ="],[-1,"> void  // optional callback\n) {\n    return function (start: number, end: number"],[1," 2, pause: number = 30"],[0,") {\n"],[-1,"   "],[1,"\n"],[0,"    "],[-1," "],[0,"step"]],"start1":148,"start2":148,"length1":170,"length2":86},{"diffs":[[0,"bs(step)"],[-1,";"],[0,"\n\n    "],[-1,"  "],[-1,"  "],[0,"if (star"]],"start1":243,"start2":243,"length1":27,"length2":22},{"diffs":[[0," end) {\n        "],[-1," "],[-1,"   "],[0,"for (let i = sta"]],"start1":269,"start2":269,"length1":36,"length2":32},{"diffs":[[0,") {\n            "],[-1,"   "],[-1," "],[0,"servo.setAngle(i"]],"start1":323,"start2":323,"length1":36,"length2":32},{"diffs":[[0,"ervo.setAngle(i)"],[-1,";\n    "],[1,"\n"],[0,"            basi"]],"start1":340,"start2":340,"length1":38,"length2":33},{"diffs":[[0,"use)"],[-1,";\n                if (callback) {\n                    callback(i);\n                }\n            }\n    "],[1,"\n        }\n"],[0,"    "]],"start1":383,"start2":383,"length1":111,"length2":19},{"diffs":[[0," else {\n"],[-1,"    "],[0,"        "]],"start1":403,"start2":403,"length1":20,"length2":16},{"diffs":[[0,") {\n            "],[-1,"    "],[0,"servo.setAngle(i"]],"start1":457,"start2":457,"length1":36,"length2":32},{"diffs":[[0,"Angle(i)"],[-1,";"],[0,"\n       "]],"start1":482,"start2":482,"length1":17,"length2":16},{"diffs":[[0,"(i)\n            "],[-1,"    "],[0,"basic.pause(paus"]],"start1":487,"start2":487,"length1":36,"length2":32},{"diffs":[[0,"e(pause)"],[-1,";"],[0,"\n       "]],"start1":513,"start2":513,"length1":17,"length2":16},{"diffs":[[0,"    "],[1,"}\n"],[0,"    "],[-1,"    if (callback) {\n                    callback(i);\n    "],[1,"}\n\n}\n\nbasic.forever(function () {\n    if (!run) {\n"],[0,"        "],[1,"return\n"],[0,"    }\n"],[1,"\n"],[0,"    "],[-1,"        }\n        }\n    };\n}\n\n\n\n"],[1,"stepServo(servos.P1, 90, 180);\n    stepServo(servos.P1, 180, 0);\n    stepServo(servos.P1, 0, 90);\n\n})"],[0,"\ninp"]],"start1":526,"start2":526,"length1":119,"length2":191},{"diffs":[[0,"rage;\n}\n"],[-1,"\n"],[1,"basic.forever("],[0,"function"]],"start1":1744,"start2":1744,"length1":17,"length2":30},{"diffs":[[0,"ion "],[-1,"imuWrite"],[0,"() {\n\n"],[-1,"    "],[0,"    "]],"start1":1771,"start2":1771,"length1":26,"length2":14},{"diffs":[[0,"))\n\n    "],[-1,"   "],[-1," "],[0,"let v = "]],"start1":1837,"start2":1837,"length1":20,"length2":16},{"diffs":[[0,");\n\n    "],[-1,"   "],[-1," "],[0,"serial.w"]],"start1":1865,"start2":1865,"length1":20,"length2":16},{"diffs":[[0,"v)\n}"],[-1,"\n\nss = mkStepServo(servos.P1, )\n\nbasic.forever(function () {\n    if (!run) {\n        return\n    }\n\n    stepServo(servos.P1, 90, 180);\n    stepServo(servos.P1, 180, 0);\n    stepServo(servos.P1, 0, 90);\n\n})\n"],[1,")"],[0,"\n"]],"start1":1896,"start2":1896,"length1":210,"length2":6}]}]},{"timestamp":1751083762183,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"os3q-iCr^Vum@/a[Ux[)\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"zGAcbKP6mc+KRkoaSKLy\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8},{"diffs":[[0,"lue\""],[-1," id=\"7!$;A89f0,LD+}_Y?r*?\""],[0,"><va"]],"start1":224,"start2":224,"length1":34,"length2":8},{"diffs":[[0,"ext\""],[-1," id=\"zQKEq]+vt6eqrUnE,oI3\""],[0,"><fi"]],"start1":263,"start2":263,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"b.;BFP4mPB~/bg_OJP2^\""],[0,"><fi"]],"start1":355,"start2":355,"length1":34,"length2":8},{"diffs":[[0,"ion\""],[-1," id=\"$GOrV}~c%s@SFC{ar~%#\""],[0,"><fi"]],"start1":425,"start2":425,"length1":34,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ck\n)"],[-1,": (start: number, end: number) => void"],[0," {\n "]],"start1":255,"start2":255,"length1":46,"length2":8},{"diffs":[[0,"\n    };\n"],[-1,"\n"],[0,"}\n\n\n\n\nin"]],"start1":843,"start2":843,"length1":17,"length2":16},{"diffs":[[0,"\n}\n\n"],[-1,"\nconst ss = mkStepServo(servos.P1, 2, 30, function(angle: number){\n"],[1,"function imuWrite() {\n\n  "],[0,"    "],[1,"  "],[0,"let "]],"start1":1892,"start2":1892,"length1":79,"length2":39},{"diffs":[[0,"on.Y))\n\n"],[1,"    "],[0,"    let "]],"start1":1975,"start2":1975,"length1":16,"length2":20},{"diffs":[[0,"ut(m);\n\n    "],[1,"    "],[0,"serial.write"]],"start1":2007,"start2":2007,"length1":24,"length2":28},{"diffs":[[0,"ue(\""],[-1,"a\", angle)\n    serial.writeValue(\"x\", v)\n}"],[1,"x\", v)\n}\n\nss = mkStepServo(servos.P1, "],[0,")\n\nb"]],"start1":2038,"start2":2038,"length1":50,"length2":46},{"diffs":[[0,"   s"],[-1,"s(90, 180);\n    ss(180, 0);\n    ss( 0, 90);\n\n    run = false"],[1,"tepServo(servos.P1, 90, 180);\n    stepServo(servos.P1, 180, 0);\n    stepServo(servos.P1, 0, 90);"],[0,"\n\n})"]],"start1":2150,"start2":2150,"length1":68,"length2":104}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":256,"start2":256,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1751054319140,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Accell Test IMU\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1751082577884,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"><statement name=\"HANDLER\"><block type=\"serial_writevalue\"><value name=\"name\"><shadow type=\"text\"><field name=\"TEXT\">x</field></shadow></value><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"device_acceleration\"><field name=\"NAME\">Dimension.Y</field></block></value></block></statement></block></xml>","main.ts":"\n// Initialize the array to hold the values\nlet a: number[]  = [];\n\n// Function to add a new value and calculate the running average\nfunction addAndAverage(x: number) {\n    // Add the new value to the end\n    a.push(x);\n\n    // If there are more than 10 items, remove the oldest one\n    if (a.length > 10) {\n        a.shift();\n    }\n\n    // Calculate the sum\n    let sum = 0;\n    for (let i = 0; i < a.length; i++) {\n        sum += a[i];\n    }\n\n    // Calculate the average\n    let average = sum / a.length;\n\n    // Return the average\n    return average;\n}\nbasic.forever(function () {\n\n    let m = addAndAverage(input.acceleration(Dimension.Y))\n\n    serial.writeValue(\"x\", m)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"Accell Test IMU\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1751084013512}